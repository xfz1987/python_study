import numpy as np

# amin和amax函数
# 从给定的数组中返回最大或者最小值
a = np.array([[3,5,7], [8,4,3], [2,4,9]])
print(np.amax(a)) # 9
print(np.amin(a)) # 2

# 从给定数组中计算中位数，也就是排好序的数组中（注意：median函数自动帮你排好序）
# 如果元素个数为偶数，则为中间两个元素的中间值
# 如果元素个数为奇数，则为中间的元素
a = np.array([10,30,40,100])
print(np.median(a)) # 偶数个元素 30+40/2 35.0
a = np.array([10,30,40,60,100]) 
print(np.median(a)) # 奇数个元素，40
a = np.array([10,40,30,60,100]) 
print(np.median(a)) # median先自动排序，因为有奇数个元素，因此为40

# 标准差
# 与平均值相差的平方的平均值的平方根
# std = sqrt((mean(x-x.mean())**2)
# 例如数组 [1，2，3，4] 
# 平均值 (1+2+3+4)/4 = 2.5
# 然后相差的平方(2.25, 0.25, 0.25, 2.25)
# 再平均值 (2.25 + 0.25 + 0.25 + 0.25) / 4 = 1.25
# 平方根  √1.25**2 = 1.118033988749895
a = np.array([1,2,3,4])
print(np.std(a)) # 


# 方差
# 偏差的平方的平方跟
# 偏差：与平均数的差
# 其实标准差就是方差的算数平方根
# 标准差 = √方差
# 标准差能反映一个数据集的离散程度。平均数相同的，标准差未必相
a = np.array([1,2,3,4])
print(np.var(a)) # 1.25


# where函数，返回给定条件的元素的索引
a = np.arange(9).reshape(3,3)
print(a)
'''
[[0 1 2]
 [3 4 5]
 [6 7 8]]
'''
b = np.where(a>3)
print(b) 
'''
(array([1, 1, 2, 2, 2]), array([1, 2, 0, 1, 2]))
  行索引                      列索引
'''
print(a[b]) # [4 5 6 7 8]


