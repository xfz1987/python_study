python编码原则:
#在Python中，代码不是越多越好，而是越少越好。代码不是越复杂越好，而是越简单越好
#一行代码能实现的功能，决不写2行代码

切片(Slice)
# L = ['Michael', 'Sarah', 'Tracy', 'Bob', 'Jack']
# 取前3个元素
#   L[0:3] 表示，从索引0开始取，直到索引3为止，但不包括索引3
# 如果第一个索引是0，还可以省略 
#   L[:3]
#   L[-2:] #==> ['Bob', 'Jack']
#   
# tuple也可以用切片操作，只是操作的结果仍是tuple
# (0, 1, 2, 3, 4, 5)[:3] #==> (0,1,2)

迭代
# 当我们使用for循环时，只要作用于一个可迭代对象，for循环就可以正常运行，而我们不太关心该对象究竟是list还是其他数据类型 
#   那么，如何判断一个对象是可迭代对象呢？方法是通过collections模块的Iterable类型判断
# 	from collections import Iterable
# 	isinstance('abc',Iterable) # str是否可迭代 True
# 	isinstance([1,2,3], Iterable) # list是否可迭代 True
# 	isinstance(123, Iterable) # 整数是否可迭代 False
# 	for ch in 'ABC':
# 		print ch   #==> A  B  C
# 如果要对list实现类似Java那样的下标循环怎么办？
# 	for i,value in enumerate(['A', 'B', 'C']):
# 		print i,value

列表生成式
# Python内置的可以用来创建list的生成式
# 生成list [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] 
#   range(1,11)
# 生成[1x1, 2x2, 3x3, ..., 10x10]
#   [x*x for x in range(1,11)]
# [2x2, 4x4, ..., 10x10]
# 	[x*x for x in range(1,11) if x%2 == 0]